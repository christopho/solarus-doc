/**
\page lua_api_random_movement Random movement

\tableofcontents

This type of movement is a rectilinear movement whose trajectory changes
randomly over time. It can be seen as a particular case of the
\ref lua_api_straight_movement "straight movement" type,
where the angle is automatically changed after random delays.

\section lua_api_random_movement_inherited_methods Methods inherited from movement

Random movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all methods from the type movement.

See \ref lua_api_movement_methods to know these methods.

\section lua_api_random_movement_methods Methods of the type random movement

The following methods are specific to random movements.

\subsection lua_api_random_movement_get_speed random_movement:get_speed()

Returns the speed applied to this movement when it is started.
- Return value (number): The speed in pixels per second.

\subsection lua_api_random_movement_set_speed random_movement:set_speed(speed)

Sets the speed applied to this movement when it is started.
- \c speed (number): The new speed in pixels per second.

\subsection lua_api_random_movement_get_angle random_movement:get_angle()

Returns the angle of the current trajectory in radians.

East is <tt>0</tt>,
North is <tt>math.pi / 2</tt>,
West is <tt>math.pi</tt>,
South is  <tt>3 * math.pi / 2</tt>
and any intermediate value is possible.
- Return value (number): The angle in radians.

\remark If you prefer a value in a 4-direction system, see
\ref lua_api_movement_get_direction4 "movement:get_direction4()".

\subsection lua_api_random_movement_get_max_distance random_movement:get_max_distance()

Returns the maximum distance of this movement.

If the movement goes further than this distance, it
automatically comes back towards the initial position.
- Return value (number): The maximum distance in pixels (\c 0 means no limit).

\subsection lua_api_random_movement_set_max_distance random_movement:set_max_distance(max_distance)

Sets the maximum distance of this movement.

If the movement goes further than this distance, it
automatically comes back towards the initial position.
- \c max_distance (number): The maximum distance in pixels (\c 0 means no limit).

\subsection lua_api_random_movement_is_smooth random_movement:is_smooth()

Returns whether this movement adjusts its trajectory when an obstacle of the
\ref lua_api_map "map" is reached.
This property has no effect if the movement is not attached to a
\ref lua_api_entity "map entity"
or if the movement ignores obstacles.
- Return value (boolean): \c true if this movement is smooth.

\subsection lua_api_random_movement_set_smooth random_movement:set_smooth([smooth])

Sets whether this movement should adjust its trajectory when an obstacle of the
\ref lua_api_map "map" is reached.
This property has no effect if the movement is not attached to a
\ref lua_api_entity "map entity"
or if the movement ignores obstacles.
- \c smooth (boolean, optional): \c true to make this movement smooth.
  No value means \c true.

\section lua_api_random_movement_inherited_events Events inherited from movement

Random movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all events from the type movement.

See \ref lua_api_movement_events to know these events.

*/

