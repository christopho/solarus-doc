/**
\page lua_api_target_movement Target movement

\tableofcontents

A target movement goes towards a target point.
The target point can be a fixed point of an \ref lua_api_entity "entity"
of the \ref lua_api_map "map".
If the target is a moving map entity, the movement updates its angle to
continue to go towards the entity.
By default, the target is the \ref lua_api_entity "hero" when a
\ref lua_api_game "game" is running.

This type of movement can be seen as a particular case of the
\ref lua_api_straight_movement_methods "straight movement" type,
where the angle is set automatically to go towards
the target.

\remark This type of movement goes straight towards the target.
If you set the \c smooth property to \c true, it will try to avoid simple
obstacles by moving to a side.
This is usually enough for simple enemies that target the hero.
If you want a more complex technique that calculates an intelligent path to
the target,
see the \ref lua_api_path_finding_movement "path finding movement" type.

\section lua_api_target_movement_inherited_methods Methods inherited from movement

Target movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all methods from the type movement.

See \ref lua_api_movement_methods to know these methods.

\section lua_api_target_movement_methods Methods of the type target movement

The following methods are specific to target movements.

\subsection lua_api_target_movement_set_target target_movement:set_target(x, y), target_movement:set_target(entity, [x, y])

Sets the target of this movement as a fixed point or a
\ref lua_api_entity "map entity".

To target a fixed point:
- \c x (number): X coordinate of the target.
- \c y (number): Y coordinate of the target.

To target a map entity (only during a \ref lua_api_game "game"):
- \c entity (\ref lua_api_entity "entity"): The entity to target.
- \c x (number, optional): X offset to add to the target entity's coordinates.
  Default is \c 0.
- \c y (number, optional): Y offset to add to the target entity's coordinates.
  Default is \c 0.

\subsection lua_api_target_movement_get_speed target_movement:get_speed()

Returns the speed of this movement.
- Return value (number): The speed in pixels per second.

\subsection lua_api_target_movement_set_speed target_movement:set_speed(speed)

Sets the speed of this movement.
- \c speed (number): The new speed in pixels per second.

\subsection lua_api_target_movement_get_angle target_movement:get_angle()

Returns the angle of the trajectory in radians.

East is <tt>0</tt>,
North is <tt>math.pi / 2</tt>,
West is <tt>math.pi</tt>,
South is  <tt>3 * math.pi / 2</tt>
and any intermediate value is possible.
- Return value (number): The angle in radians.

\remark If you prefer a value in a 4-direction system, see
\ref lua_api_movement_get_direction4 "movement:get_direction4()".

\subsection lua_api_target_movement_is_smooth target_movement:is_smooth()

Returns whether this movement adjusts its trajectory when an obstacle of the
\ref lua_api_map "map" is reached.
This property has no effect if the movement is not attached to a
\ref lua_api_entity "map entity"
or if the movement ignores obstacles.
- Return value (boolean): \c true if this movement is smooth.

\subsection lua_api_target_movement_set_smooth target_movement:set_smooth([smooth])

Sets whether this movement should adjust its trajectory when an obstacle of the
\ref lua_api_map "map" is reached.
This property has no effect if the movement is not attached to a
\ref lua_api_entity "map entity"
or if the movement ignores obstacles.
- \c smooth (boolean, optional): \c true to make this movement smooth.
  No value means \c true.

\section lua_api_target_movement_inherited_events Events inherited from movement

Target movements are particular \ref lua_api_movement "movement" objects.
Therefore, they inherit all events from the type movement.

See \ref lua_api_movement_events to know these events.

*/

