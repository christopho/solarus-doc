/**
\page lua_api_language Language functions

\tableofcontents

\c sol.language lets you get and set the current language
and manage language-specific data.

Each language is identified by a code (like \c "en", \c "fr") and has a
human-readable name (like \c "English", \c "Fran√ßais").
The language code corresponds to the name of the directory with files
translated in this language (sprites, strings and dialogs).

The list of languages available in your quest is specified in the
quest resource list
\ref quest_database_file "project_db.dat".

\section lua_api_language_functions Functions of sol.language

\subsection lua_api_language_get_language sol.language.get_language()

Returns the code of the current language.
- Return value (string): The code that identifies the current language, or
  \c nil if no language was set.

\subsection lua_api_language_set_language sol.language.set_language(code)

Changes the current language.
- \c code (string): The code that identifies the new language to set.
  It must be a valid code as defined in
  \ref quest_database_file "project_db.dat".

\subsection lua_api_language_get_language_name sol.language.get_language_name([code])

Returns the human-readable name of a language.
- \c code (string, optional): The code of a language (no value means the
  current language).
- Return value (string): the human-readable name of this language.

\subsection lua_api_language_get_languages sol.language.get_languages()

Returns the list of available languages.
- Return value (table): An array of all language codes defined in
  \ref quest_database_file "project_db.dat".
  Languages are in the same order as in \c project_db.dat.

\subsection lua_api_language_get_string sol.language.get_string(key)

Returns a string translated in the current language.

Translated strings are defined in the file
\ref quest_language_strings "text/strings.dat"
of the
language-specific directory (e.g. \c languages/en/text/strings.dat).
- \c key (string): Key of the string to get. The corresponding key-value
  pair must be defined in
  \ref quest_language_strings "text/strings.dat".
- Return value (string): The value associated to this key in
  \ref quest_language_strings "text/strings.dat", or \c nil if it does
  not exist.

\subsection lua_api_language_get_dialog sol.language.get_dialog(dialog_id)

Returns a dialog translated in the current language.

Translated dialogs are defined in the file
\ref quest_language_dialogs "text/dialogs.dat" of the
language-specific directory (e.g. \c languages/en/text/dialogs.dat).
- \c dialog_id (string): Id of the dialog to get.
- Return value (table): The corresponding dialog in the current language,
  or \c nil if it does not exist.
  The dialog is a table with at least the following two entries:
  - \c dialog_id (string): Id of the dialog.
  - \c text (string): Text of the dialog.
  The table also contains all custom entries defined in
  \ref quest_language_dialogs "text/dialogs.dat"
  for this dialog.
  These custom entries always have string keys and string values.
  Values that were defined as numbers in \c "text/dialogs.dat" are replaced
  in this table by their string representation,
  and values that were defined as booleans are
  replaced by the string \c "1" for \c true and \c "0" for \c false.

*/

