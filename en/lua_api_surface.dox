/**
\page lua_api_surface Surfaces

\tableofcontents

A surface is a 2D image. It is essentially a rectangle of pixels.
Its main feature is that you can draw objects on it.

\section lua_api_surface_functions Functions of sol.surface

\subsection lua_api_surface_create_empty sol.surface.create([width, height])

Creates an empty surface.
- \c width (number, optional): Width of the surface to create in pixels.
  The default value is the width of the logical screen.
- \c height (number, optional): Height of the surface to create in pixels.
  The default value is the height of the logical screen.
- Return value (surface): The surface created.

\subsection lua_api_surface_create_from_file sol.surface.create(file_name, [language_specific])

Creates a surface from an image file.
- \c file_name (string): Name of the image file to load.
- \c language_specific (boolean, optional): \c true to load the image
  from the \c images subdirectory of the current language directory
  (default is \c false and loads the image from the \c sprites directory).
- Return value (surface): The surface created, or \c nil if the image file
  could not be loaded.

\section lua_api_surface_inherited_methods Methods inherited from drawable

Surfaces are particular \ref lua_api_drawable "drawable" objects.
Therefore, they inherit all methods from the type drawable.

See \ref lua_api_drawable_methods to know these methods.

\section lua_api_surface_methods Methods of the type surface

The following methods are specific to surfaces.

\subsection lua_api_surface_get_size surface:get_size()

Returns the size of this surface.
- Return value 1 (number): Width of the surface in pixels.
- Return value 2 (number): Height of the surface in pixels.

\subsection lua_api_surface_clear surface:clear()

Erases all pixels of this surface.

All pixels become transparent.
The opacity property and the size of the surface are preserved.

\subsection lua_api_surface_fill_color surface:fill_color(color, [x, y, width, height])

Fills a region of this surface with a color.

If no region is specified, the entire surface is filled.
If the color has an alpha component different from 255 (opaque), then the
color is blended onto the existing pixels.
- \c color (table): The color as an array of 3 RGB values or 4 RGBA values
  (\c 0 to \c 255).
- \c x (number, optional): X coordinate of the region to fill on this surface.
- \c y (number, optional): Y coordinate of the region to fill on this surface.
- \c width (number, optional): Width of the region to fill on this surface.
- \c height (number, optional): Height of the region to fill on this surface.


\subsection lua_api_surface_get_pixels surface:get_pixels()

Returns all pixel values of this surface.
- Return value (string): The pixels as a pack of bytes in 32-bit RGBA format.
  Every pixel is stored on 4 bytes (red, green, blue, alpha).

\subsection lua_api_surface_set_pixels surface:set_pixels(pixels)

Sets all pixel values of this surface.

The number of pixels should match the size of the surface
(the size does not change).
- \c pixels (string): The pixels as a pack of bytes in 32-bit RGBA format.
  Every pixel is stored on 4 bytes (red, green, blue, alpha).

*/

